name: dotfiles

on: [push, pull_request]

jobs:
  parameter-checks-build:
    name: Testing install with parameters in ${{ matrix.os }}
    runs-on: ubuntu-latest

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          sudo apt install curl git shellcheck python3-setuptools python-setuptools -y
          sudo apt install python3-pip  python-pip -y
          pip2 install --user --upgrade pip
          pip3 install --user --upgrade pip
      - name: Basic shellcheck
        run: |
          ./test/basic.sh --verbose
      - name: Full install
        run: |
          ./install.sh --verbose --portables
          ./install.sh --verbose --bin
          ./install.sh --verbose --shell  --shell_scripts --shell_frameworks=bash
          ./install.sh --verbose --emacs
          ./install.sh --verbose --vim --nvim=development
          ./install.sh --verbose --python=3
          ./install.sh --verbose --python=2
          ./install.sh --verbose --git
      - name: Full force install
        run: |
          sudo ./install.sh --force --packages

  linux-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-18.04,
        ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          sudo apt install curl git shellcheck python3-setuptools python-setuptools -y
          sudo apt install python3-pip  python-pip -y
          pip2 install --user --upgrade pip
          pip3 install --user --upgrade pip
      - name: Basic shellcheck
        run: |
          ./test/basic.sh --verbose
      - name: Full install
        run: |
          ./install.sh --verbose
      - name: Full force install
        run: |
          ./install.sh --verbose --force
      - name: Packages install
        run: |
          sudo ./install.sh --verbose --packages --only

  osx-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [
          macOS-latest,
          macOS-10.14
        ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          brew install git curl shellcheck
      - name: Basic shellcheck
        run: |
          ./test/basic.sh --verbose
      - name: Full install
        run: |
          ./install.sh --verbose
      - name: Full force install
        run: |
          ./install.sh --verbose --force

  windows-build:
    name: Testing install script in ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [
          windows-latest,
          windows-2019,
          windows-2016
        ]

    env:
      GITHUB: true

    steps:
      - uses: actions/checkout@v1
      - name: Enable Chocolatey
        shell: powershell
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      - name: Install dependencies
        shell: bash
        run: |
          choco install python git curl -y
      - name: Full install
        shell: bash
        run: |
          ./install.sh --verbose
      - name: Force install
        shell: bash
        run: |
          ./install.sh --verbose --force
